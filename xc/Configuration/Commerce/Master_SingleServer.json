{
  "Parameters": {
    "BaseConfigurationFolder": {
      "Type": "string",
      "Description": "The base folder for SIF configuration."
    },
    "SiteName": {
      "Type": "string",
      "Description": "The name of the site to be deployed."
    },
    "SiteHostHeaderName": {
      "Type": "string",
      "Description": "The host header name of the site to be deployed."
    },
    "InstallDir": {
      "Type": "string",
      "Description": "The sitecore site content path."
    },
    "XConnectInstallDir": {
      "Type": "string",
      "Description": "The sitecore xConnect site content path."
    },
    "CommerceInstallRoot": {
      "Type": "string",
      "Description": "The root path of commerce services."
    },
    "CommerceServicesDbServer": {
      "Type": "string",
      "DefaultValue": ".\\SQLSERVER",
      "Description": "The Commerce Engine database server name."
    },
    "CommerceServicesDbName": {
      "Type": "string",
      "DefaultValue": "SitecoreCommerce9_SharedEnvironments",
      "Description": "The Commerce Engine database name."
    },
    "CommerceServicesGlobalDbName": {
      "Type": "string",
      "DefaultValue": "SitecoreCommerce9_Global",
      "Description": "The Commerce Engine global database name"
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "Description": "The Commerce Engine postfix for services names"
    },
    "CommerceServicesHostPostfix": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The postfix for Commerce Engine services host names"
    },
    "SitecoreDbServer": {
      "Type": "string",
      "DefaultValue": ".\\SQLSERVER",
      "Description": "The Sitecore database server name."
    },
    "SitecoreCoreDbName": {
      "Type": "string",
      "Description": "The Sitecore Core database name."
    },
    "CommerceSearchProvider": {
      "Type": "string",
      "DefaultValue": "SOLR",
      "Description": "The search provider used for the Commerce Engine - Accepted values are 'SOLR' and 'AZURE'"
    },
    "SolrUrl": {
      "Type": "string",
      "DefaultValue": "https://localhost:8992/solr",
      "Description": "The Solr instance url."
    },
    "SolrRoot": {
      "Type": "string",
      "DefaultValue": "c:\\solr-7.2.1",
      "Description": "The file path to the Solr instance."
    },
    "SolrService": {
      "Type": "string",
      "DefaultValue": "solr-7.2.1",
      "Description": "The name of the Solr service."
    },
    "SolrSchemas": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The path to Solr schemas."
    },
    "SearchIndexPrefix": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The prefix for indexes or cores."
    },
    "EnvironmentsPrefix": {
      "Type": "string",
      "Description": "The prefix for the Commerce environments names."
    },
    "Environments": {
      "Type": "string[]",
      "Description": "List of environments to initialize."
    },
    "AzureSearchServiceName": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service name. Requires param CommerceSearchProvider to be set to 'AZURE'"
    },
    "AzureSearchAdminKey": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service admin key. Requires param CommerceSearchProvider to be set to 'AZURE'"
    },
    "AzureSearchQueryKey": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Azure search service query key. Requires param CommerceSearchProvider to be set to 'AZURE'"
    },
    "CommerceEngineDacPac": {
      "Type": "string",
      "Description": "Commerce Engine DacPac"
    },
    "CommerceOpsServicesPort": {
      "Type": "string",
      "DefaultValue": "5015",
      "Description": "Commerce Ops Services port"
    },
    "CommerceShopsServicesPort": {
      "Type": "string",
      "DefaultValue": "5005",
      "Description": "Commerce Shops Services port"
    },
    "CommerceAuthoringServicesPort": {
      "Type": "string",
      "DefaultValue": "5000",
      "Description": "Commerce Authoring Services port"
    },
    "CommerceMinionsServicesPort": {
      "Type": "string",
      "DefaultValue": "5010",
      "Description": "Commerce Minions Services port"
    },
    "SitecoreCommerceEnginePath": {
      "Type": "string",
      "Description": "Sitecore Commerce Engine Path"
    },
    "SitecoreBizFxServicesContentPath": {
      "Type": "string",
      "Description": "SitecoreBizFx Services Content Path"
    },
    "SitecoreBizFxServerName": {
      "Type": "string",
      "Description": "SitecoreBizFx Server name",
      "DefaultValue": "SitecoreBizFx"
    },
    "SitecoreBizFxPort": {
      "Type": "string",
      "DefaultValue": "4200",
      "Description": "Sitecore BizFx Server port"
    },
    "UserDomain": {
      "Type": "string",
      "DefaultValue": "$Env:COMPUTERNAME",
      "Description": "User Domain for Commerce Services App Pool"
    },
    "UserName": {
      "Type": "string",
      "DefaultValue": "CSFndRuntimeUser",
      "Description": "User Name for Commerce Services App Pool"
    },
    "UserPassword": {
      "Type": "string",
      "DefaultValue": "Pu8azaCr",
      "Description": "User Password for Commerce Services App Pool"
    },
    "BraintreeAccount": {
      "Type": "psobject",
      "Description": "Braintree sandbox account for Payment plugin"
    },
    "CommerceEngineCertificateName": {
      "Type": "string",
      "Description": "The Commerce Engine certificate name for communication between Engine and Storefront."
    },
    "RootCertFileName": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "SitecoreRootCert"
    },
    "CertPath": {
      "Type": "string",
      "Description": "The physical path on disk where certificates will be stored.",
      "DefaultValue": "c:\\certificates"
    },
    "ExportPassword": {
      "Type": "String",
      "Description": "Password to export certificates with.",
      "DefaultValue": "SIF-Default"
    },
    "SiteUtilitiesSrc": {
      "Type": "string",
      "Description": "Site Utilities source path"
    },
    "HabitatImagesModuleFullPath": {
      "Type": "string",
      "Description": "Habitat Images module full path"
    },
    "AdvImagesModuleFullPath": {
      "Type": "string",
      "Description": "Adventure Works Images module full path"
    },
    "CommerceConnectModuleFullPath": {
      "Type": "string",
      "Description": "Commerce Connect module full path"
    },
    "CommercexProfilesModuleFullPath": {
      "Type": "string",
      "Description": "Commerce xProfiles module full path"
    },
    "CommercexAnalyticsModuleFullPath": {
      "Type": "string",
      "Description": "Commerce xAnalytics module full path"
    },
    "CommerceMAModuleFullPath": {
      "Type": "string",
      "Description": "Commerce Marketing Automation module full path"
    },
    "CommerceMAForAutomationEngineModuleFullPath": {
      "Type": "string",
      "Description": "Commerce Marketing Automation for AutomationEngine module full path"
    },
    "CEConnectModuleFullPath": {
      "Type": "string",
      "Description": "Commerce Engine Connect module full path"
    },
    // "PowerShellExtensionsModuleFullPath": {
    //   "Type": "string",
    //   "Description": "PowerShell Extensions module full path"
    // },
    // "SXAModuleFullPath": {
    //   "Type": "string",
    //   "Description": "Sitecore Experience Accelerator module full path"
    // },
    "SXACommerceModuleFullPath": {
      "Type": "string",
      "Description": "SXA Commerce module full path"
    },
    "SXAStorefrontModuleFullPath": {
      "Type": "string",
      "Description": "SXA Storefront module full path"
    },
    "SXAStorefrontThemeModuleFullPath": {
      "Type": "string",
      "Description": "SXA Storefront Themes module full path"
    },
    "SXAStorefrontCatalogModuleFullPath": {
      "Type": "string",
      "Description": "SXA Storefront Catalog module full path"
    },
    "MergeToolFullPath": {
      "Type": "string",
      "Description": "The Merge Tool full path"
    },
    "SitecoreUsername": {
      "Type": "string",
      "Description": "Sitecore Admin Username"
    },
    "SitecoreUserPassword": {
      "Type": "string",
      "Description": "Sitecore Admin Password"
    },
    "SitecoreIdentityServerApplicationName": {
      "Type": "string",
      "Description": "Application name of Sitecore Identity Server in the IIS"
    },
    "SitecoreIdentityServerHostName": {
      "Type": "string",
      "Description": "Hostname of Sitecore Identity Server."
    },
    "SqlAdminUser": {
      "Type": "string",
      "DefaultValue": "sa",
      "Description": "The Sql admin user account to use when installing databases."
    },
    "SqlAdminPassword": {
      "Type": "string",
      "DefaultValue": "123456",
      "Description": "The Sql admin password to use when installing databases."
    },
    "CommerceAuthoring": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Commerce Authoring service name"
    },
    "CommerceOps": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Commerce Ops service name"
    },
    "CommerceShops": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Commerce Shops service name"
    },
    "CommerceMinions": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Commerce Minions service name"
    },
    "SitecoreXCIdentityServerConfig" : {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The path of IdentiyServer install configuration"
    }
  },
  "Variables": {
    // Variables are values calculated in a configuration.
    // They can reference Parameters, other Variables, and config functions.
    "SiteUtilitiesDir": "[concat(parameter('InstallDir'), '\\SiteUtilityPages')]",
    "ModulesDirDst": "[concat(parameter('InstallDir'), '\\App_Data\\packages')]",
    "UtilitiesBaseUrl": "[concat('http://', concat(parameter('SiteHostHeaderName'), '/SiteUtilityPages'))]",
    "PackagesDirDst": "[concat(parameter('InstallDir'), '\\sitecore\\admin\\Packages')]",
    "CEMergeInputFile": "[concat(parameter('InstallDir'), '\\MergeFiles\\Sitecore.Commerce.Engine.Connectors.Merge.Config')]",
    "SXAMergeInputFile": "[concat(parameter('InstallDir'), '\\MergeFiles\\Merge.SXA.Storefront.config')]",
    "WebConfig": "[concat(parameter('InstallDir'), '\\Web.Config')]",
    "EngineConnectIncludeDir": "[concat(parameter('InstallDir'), '\\App_Config\\Include\\Y.Commerce.Engine')]",
    "ConnectionString": "[concat('Data Source=.;Initial Catalog=', concat(parameter('SitecoreCoreDbName'), ';Integrated Security=True'))]",
    "ProjectConfigIncludeDir": "[concat(parameter('InstallDir'), '\\App_Config\\Include\\Z.Foundation.Overrides')]",
    "SiteRootUrl": "[concat('https://', concat(parameter('SiteHostHeaderName')))]",
    "SitecoreIdentityServerUrl": "[concat('https://', parameter('SitecoreIdentityServerHostName'))]",
    // Variables for Sitecore Commerce Engines
    "CommerceOpsServiceName": "[parameter('CommerceOps')]",
    "CommerceShopsServiceName": "[parameter('CommerceShops')]",
    "CommerceMinionsServiceName": "[parameter('CommerceMinions')]",
    "CommerceAuthoringServiceName": "[parameter('CommerceAuthoring')]",
    "CommerceAuthoringServiceUrl": "[concat('https://', variable('CommerceAuthoringServiceName'))]",
    "CommerceShopsServiceUrl": "[concat('https://', variable('CommerceShopsServiceName'))]",
    "BizFxServiceUrl": "[concat('https://', parameter('SitecoreBizFxServerName'))]"
  },
  "Modules": [
    "InstallSitecoreConfiguration",
    "ManageCommerceService",
    "SitecoreUtilityTasks",
    "WindowsLocal"
  ],
  "Tasks": {
    // Tasks are separate units of work in a configuration.
    // Each task is an action that will be completed when Install-SitecoreConfiguration is called.
    // By default, tasks are applied in the order they are declared.
    // Tasks may reference Parameters, Variables, and config functions.


    "SetIdentityServerCommerceConfiguration": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\IdentityServer\\sitecore-identity-config.json')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "SitecoreIdentityServerApplicationName": "[parameter('SitecoreIdentityServerApplicationName')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "BizFxServiceUrl": "[variable('BizFxServiceUrl')]",
        "CommerceAuthoringServiceUrl": "[variable('CommerceAuthoringServiceUrl')]",
        "SitecoreXCIdentityServerConfig": "[parameter('SitecoreXCIdentityServerConfig')]"
      }
    },
    "InstallSolrCores": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Solr\\sitecore-commerce-solr.json')]",
        "SolrUrl": "[parameter('SolrUrl')]",
        "SolrRoot": "[parameter('SolrRoot')]",
        "SolrService": "[parameter('SolrService')]",
        "SolrSchemas": "[parameter('SolrSchemas')]",
        "CorePrefix": "[parameter('SearchIndexPrefix')]"
      }
    },
    "DeployCommerceEngine": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CommerceEngine\\CommerceEngine.Deploy.json')]",
        "CommerceEngineCertificateName": "[parameter('CommerceEngineCertificateName')]",
        "RootCertFileName": "[parameter('RootCertFileName')]",
        "CertPath": "[parameter('CertPath')]",
        "CommerceServicesDbServer": "[parameter('CommerceServicesDbServer')]",
        "CommerceServicesDbName": "[parameter('CommerceServicesDbName')]",
        "CommerceServicesGlobalDbName": "[parameter('CommerceServicesGlobalDbName')]",
        "CommerceServicesPostfix": "[parameter('CommerceServicesPostfix')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "SitecoreDbServer": "[parameter('SitecoreDbServer')]",
        "SitecoreCoreDbName": "[parameter('SitecoreCoreDbName')]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]",
        "SolrUrl": "[parameter('SolrUrl')]",
        "SearchIndexPrefix": "[parameter('SearchIndexPrefix')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "AzureSearchServiceName": "[parameter('AzureSearchServiceName')]",
        "AzureSearchAdminKey": "[parameter('AzureSearchAdminKey')]",
        "AzureSearchQueryKey": "[parameter('AzureSearchQueryKey')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "CommerceEngineDacPac": "[parameter('CommerceEngineDacPac')]",
        "SiteHostHeaderName": "[parameter('SiteHostHeaderName')]",
        "CommerceOpsServicesPort": "[parameter('CommerceOpsServicesPort')]",
        "CommerceShopsServicesPort": "[parameter('CommerceShopsServicesPort')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "CommerceMinionsServicesPort": "[parameter('CommerceMinionsServicesPort')]",
        "SitecoreBizFxPort": "[parameter('SitecoreBizFxPort')]",
        "SitecoreCommerceEnginePath": "[parameter('SitecoreCommerceEnginePath')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]",
        "BraintreeAccount": "[parameter('BraintreeAccount')]",
        "BaseConfigurationFolder": "[parameter('BaseConfigurationFolder')]",
        "SitecoreIdentityServerUrl": "[variable('SitecoreIdentityServerUrl')]",
        "SqlAdminUser": "[parameter('SqlAdminUser')]",
        "SqlAdminPassword": "[parameter('SqlAdminPassword')]",
        "BizFxServiceUrl": "[variable('BizFxServiceUrl')]",
        "CommerceAuthoringServiceUrl": "[variable('CommerceAuthoringServiceUrl')]",
        "CommerceAuthoringServiceName": "[variable('CommerceAuthoringServiceName')]",
        "CommerceOpsServiceName": "[variable('CommerceOpsServiceName')]",
        "CommerceShopsServiceName": "[variable('CommerceShopsServiceName')]",
        "CommerceMinionsServiceName": "[variable('CommerceMinionsServiceName')]"
      }
    },
    "DeploySitecoreBizFx": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SitecoreBizFx\\SitecoreBizFx.json')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "SitecoreBizFxServicesContentPath": "[parameter('SitecoreBizFxServicesContentPath')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "SitecoreBizFxServerName": "[parameter('SitecoreBizFxServerName')]",
        "SitecoreBizFxPort": "[parameter('SitecoreBizFxPort')]",
        "BaseConfigurationFolder": "[parameter('BaseConfigurationFolder')]",
        "SitecoreIdentityServerUrl": "[variable('SitecoreIdentityServerUrl')]",
        "SqlAdminUser": "[parameter('SqlAdminUser')]",
        "SqlAdminPassword": "[parameter('SqlAdminPassword')]",
        "BizFxServiceUrl": "[variable('BizFxServiceUrl')]",
        "CommerceAuthoringServiceUrl": "[variable('CommerceAuthoringServiceUrl')]"
      }
    },
    "PreconfigureStorefrontInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SXAStorefront\\SXAStorefront.Preconfigure.json')]",
        "SiteName": "[parameter('SiteName')]",
        "StorefrontHostName": "[parameter('SiteHostHeaderName')]",
        "InstallDir": "[parameter('InstallDir')]",
        "SiteUtilitiesSrc": "[parameter('SiteUtilitiesSrc')]",
        "CertPath": "[parameter('CertPath')]",
        "RootCertName": "[parameter('RootCertFileName')]"
      }
    },
    // "InstallPowershellExtensions": {
    //   "Type": "InstallSitecoreConfiguration",
    //   "Params": {
    //     "Path": "[concat(parameter('BaseConfigurationFolder'), '\\SitecoreUtilities\\InstallModule.json')]",
    //     "ModuleFullPath": "[parameter('PowerShellExtensionsModuleFullPath')]",
    //     "ModulesDirDst": "[variable('ModulesDirDst')]",
    //     "BaseUrl": "[variable('UtilitiesBaseUrl')]"
    //   }
    // },
    // "InstallSXAFrameworkModule": {
    //   "Type": "InstallSitecoreConfiguration",
    //   "Params": {
    //     "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SXAStorefront\\SXAStorefront.Framework.json')]",
    //     "ModuleFullPath": "[parameter('SXAModuleFullPath')]",
    //     "ModulesDirDst": "[variable('ModulesDirDst')]",
    //     "BaseUrl": "[variable('UtilitiesBaseUrl')]"
    //   }
    // },
    "PublishExtensions": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\SitecoreUtilities\\PublishToWeb.json')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallHabitatImagesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Common\\images.json')]",
        "ModuleFullPath": "[parameter('HabitatImagesModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallAdventureWorksImagesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Common\\images.json')]",
        "ModuleFullPath": "[parameter('AdvImagesModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommerceConnectModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Connect\\Connect.json')]",
        "ModuleFullPath": "[parameter('CommerceConnectModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommercexProfilesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Connect\\Connect_xProfiles.json')]",
        "ModuleFullPath": "[parameter('CommercexProfilesModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommercexAnalyticsModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Connect\\Connect_xAnalytics.json')]",
        "ModuleFullPath": "[parameter('CommercexAnalyticsModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "CopyConnectModels": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Connect\\Connect.Copy.Models.json')]",
        "InstallRootDst": "[parameter('InstallDir')]",
        "XConnectInstallRootDst": "[parameter('XConnectInstallDir')]"
      }
    },
    "InstallCommerceMAModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Connect\\Connect_MarketingAutomation.json')]",
        "XConnectSitePath": "[parameter('XConnectInstallDir')]",
        "ModuleFullPath": "[parameter('CommerceMAModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "AutomationEngineModule": "[parameter('CommerceMAForAutomationEngineModuleFullPath')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]",
        "SiteName": "[parameter('SiteName')]"
      }
    },
    "InstallCommerceEngineConnectModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CEConnect\\CEConnect.json')]",
        "ModuleFullPath": "[parameter('CEConnectModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]",
        "MergeTool": "[parameter('MergeToolFullPath')]",
        "InputFile": "[variable('CEMergeInputFile')]",
        "WebConfig": "[variable('WebConfig')]"
      }
    },
    "InstallSXAStorefrontModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SXAStorefront\\SXAStorefront.Storefront.json')]",
        "SXACommerceModuleFullPath": "[parameter('SXACommerceModuleFullPath')]",
        "SXAStorefrontModuleFullPath": "[parameter('SXAStorefrontModuleFullPath')]",
        "SXAStorefrontThemeModuleFullPath": "[parameter('SXAStorefrontThemeModuleFullPath')]",
        "SXAStorefrontCatalogModuleFullPath": "[parameter('SXAStorefrontCatalogModuleFullPath')]",
        "ModulesDirDst": "[variable('ModulesDirDst')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]",
        "MergeTool": "[parameter('MergeToolFullPath')]",
        "InputFile": "[variable('SXAMergeInputFile')]",
        "WebConfig": "[variable('WebConfig')]"
      }
    },
    "InitializeCommerce": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CEConnect\\InitializeCommerce.json')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "EngineConnectIncludeDir": "[variable('EngineConnectIncludeDir')]",
        "CommerceEngineCertificateName": "[concat('*.', parameter('CommerceServicesHostPostfix'))]",
        "CommerceServicesPostfix": "[parameter('CommerceServicesPostfix')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "CommerceAuthoringServiceName": "[variable('CommerceAuthoringServiceName')]",
        "CommerceOpsServiceName": "[variable('CommerceOpsServiceName')]",
        "CommerceShopsServiceName": "[variable('CommerceShopsServiceName')]",
        "CommerceMinionsServiceName": "[variable('CommerceMinionsServiceName')]",
       "CommerceAuthoringServiceUrl": "[variable('CommerceAuthoringServiceUrl')]"
      }
    },
    "InitializeCommerceEngine": {
      "Skip": "[parameter('CommerceServicesHostPostfix')]",
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CommerceEngine\\CommerceEngine.Initialize.json')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "CommerceServicesPostfix": "[parameter('CommerceServicesPostfix')]",
        "CommerceShopsServicesPort": "[parameter('CommerceShopsServicesPort')]",
        "Environments": "[parameter('Environments')]",
        "SitecoreAdminAccount": {
          "UserName": "[parameter('SitecoreUsername')]",
          "Password": "[parameter('SitecoreUserPassword')]"
        },
        "SitecoreIdentityServerGetTokenUrl": "[concat(variable('SitecoreIdentityServerUrl'), '/connect/token')]",
        "CommerceAuthoringServiceName": "[variable('CommerceAuthoringServiceName')]",
        "CommerceOpsServiceName": "[variable('CommerceOpsServiceName')]",
        "CommerceShopsServiceName": "[variable('CommerceShopsServiceName')]",
        "CommerceMinionsServiceName": "[variable('CommerceMinionsServiceName')]",
        "CommerceShopsServiceUrl": "[variable('CommerceShopsServiceUrl')]"
      }
    },
    "InitializeCommerceEngineUsingHost": {
      "Skip": "[not(parameter('CommerceServicesHostPostfix'))]",
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CommerceEngine\\CommerceEngine.InitializeUsingHost.json')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "CommerceServicesPostfix": "[parameter('CommerceServicesPostfix')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "Environments": "[parameter('Environments')]",
        "SitecoreAdminAccount": {
          "UserName": "[parameter('SitecoreUsername')]",
          "Password": "[parameter('SitecoreUserPassword')]"
        },
        "SitecoreIdentityServerGetTokenUrl": "[concat(variable('SitecoreIdentityServerUrl'), '/connect/token')]",
        "CommerceAuthoringServiceName": "[variable('CommerceAuthoringServiceName')]",
        "CommerceOpsServiceName": "[variable('CommerceOpsServiceName')]",
        "CommerceShopsServiceName": "[variable('CommerceShopsServiceName')]",
        "CommerceMinionsServiceName": "[variable('CommerceMinionsServiceName')]",
        "CommerceShopsServiceUrl": "[variable('CommerceShopsServiceUrl')]"
      }
    },
    "EnableCEConnectDataProvider": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CEConnect\\EnableCEConnectDataProvider.json')]",
        "ConfigDir": "[variable('EngineConnectIncludeDir')]"
      }
    },
    "GenerateCatalogTemplates": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CEConnect\\GenerateCatalogTemplates.json')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    //Create the default storefront tenant and site
    "CreateDefaultTenantAndSite": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SXAStorefront\\SXAStorefront.CreateDefaultTenantAndSite.json')]",
        "SiteName": "[parameter('SiteName')]",
        "SiteRootUrl": "[variable('SiteRootUrl')]",
        "SitecoreUsername": "[parameter('SitecoreUsername')]",
        "SitecoreUserPassword": "[parameter('SitecoreUserPassword')]",
        "ProjectConfigIncludeDir": "[variable('ProjectConfigIncludeDir')]"
      }
    },
    "PublishCommerce": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\SitecoreUtilities\\PublishToWeb.json')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "PostconfigureStorefrontInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\SXAStorefront\\SXAStorefront.EnableSearch.json')]",
        "InstallDir": "[parameter('InstallDir')]"
      }
    },
    "EnableCEConnectIndexing": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\CEConnect\\EnableCEConnectIndexing.json')]",
        "ConfigDir": "[variable('EngineConnectIncludeDir')]"
      }
    },
    "Reindex": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[concat(parameter('BaseConfigurationFolder'), '\\SitecoreUtilities\\RebuildIndexes.json')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "RemoveSiteUtilityFolder": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "Name",
        "PhysicalPath": "[variable('SiteUtilitiesDir')]",
        "Action": "Remove-Item"
      }
    }
  },
  "UninstallTasks": {
    "RemoveSolrCores": {
      "Description": "Removes the SOLR cores and instance folders.",
      "Type": "ManageSolrCore",
      "Params": [
        {
          "Action": "Unload",
          "Address": "[parameter('SolrUrl')]",
          "Arguments": {
            "core": "CatalogItemsScope",
            "deleteInstanceDir": "true"
          },
          "ErrorAction": "SilentlyContinue"
        },
        {
          "Action": "Unload",
          "Address": "[parameter('SolrUrl')]",
          "Arguments": {
            "core": "CustomersScope",
            "deleteInstanceDir": "true"
          },
          "ErrorAction": "SilentlyContinue"
        },
        {
          "Action": "Unload",
          "Address": "[parameter('SolrUrl')]",
          "Arguments": {
            "core": "OrdersScope",
            "deleteInstanceDir": "true"
          },
          "ErrorAction": "SilentlyContinue"
        }
      ]
    }
  }
}